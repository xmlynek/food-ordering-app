keycloak:
  service:
    port: 8070
    type: LoadBalancer

food-ordering-app:
  service:
    port: 5173
    type: LoadBalancer
  env:
    normal:
      REACT_KEYCLOAK_URL: "http://localhost:8070"
      REACT_API_GATEWAY_URL: "http://localhost:8060"

restaurant-app:
  service:
    port: 5174
    type: LoadBalancer
  env:
    normal:
      REACT_KEYCLOAK_URL: "http://localhost:8070"
      REACT_API_GATEWAY_URL: "http://localhost:8060"

delivery-app:
  service:
    port: 5175
    type: LoadBalancer
  env:
    normal:
      REACT_KEYCLOAK_URL: "http://localhost:8070"
      REACT_API_GATEWAY_URL: "http://localhost:8060"

catalog-service:
  service:
    port: 8085
    type: LoadBalancer
  env:
    normal:
      OAUTH2_JWK_SET_URI: "http://keycloak:8070/realms/food-ordering-app/protocol/openid-connect/certs"

delivery-service:
  service:
    port: 8084
    type: LoadBalancer
  env:
    normal:
      OAUTH2_JWK_SET_URI: "http://keycloak:8070/realms/delivery/protocol/openid-connect/certs"

kitchen-service:
  service:
    port: 8083
    type: LoadBalancer
  env:
    normal:
      OAUTH2_JWK_SET_URI: "http://keycloak:8070/realms/restaurant/protocol/openid-connect/certs"

payment-service:
  service:
    port: 8082
    type: LoadBalancer

restaurant-service:
  service:
    port: 8081
    type: LoadBalancer
  env:
    normal:
      OAUTH2_JWK_SET_URI: "http://keycloak:8070/realms/restaurant/protocol/openid-connect/certs"

order-service:
  service:
    port: 8080
    type: LoadBalancer
  env:
    normal:
      OAUTH2_JWK_SET_URI: "http://keycloak:8070/realms/food-ordering-app/protocol/openid-connect/certs"

api-gateway:
  service:
    port: 8060
    type: LoadBalancer
  env:
    normal:
      CATALOG_SERVICE_URI: http://catalog-service:8085
      DELIVERY_SERVICE_URI: http://delivery-service:8084
      KITCHEN_SERVICE_URI: http://kitchen-service:8083
      RESTAURANT_SERVICE_URI: http://restaurant-service:8081
      ORDER_SERVICE_URI: http://order-service:8080

redis:
  volumePermissions:
    enabled: true
  fullnameOverride: redis
  auth:
    enabled: false
  #  password: password
  master:
    persistence:
      enabled: true
      size: 2Gi
  architecture: replication # or standalone might be enough
  replica:
    persistence:
      size: 2Gi
  metrics:
    enabled: true

zipkin:
  service:
    type: LoadBalancer

kube-prometheus-stack:
  grafana:
    adminPassword:
      password
    service:
      type: LoadBalancer
  prometheus:
    service:
      type: LoadBalancer
    prometheusSpec:
      additionalScrapeConfigs: |
        - job_name: 'prometheus'
          static_configs:
            - targets: ["localhost:9090"]
        - job_name: 'order-service-metrics'
          metrics_path: '/actuator/prometheus'
          static_configs:
            - targets: ["order-service:8080"]
              labels:
                application: 'Order service'
        - job_name: 'api-gateway-metrics'
          metrics_path: '/actuator/prometheus'
          static_configs:
            - targets: ['api-gateway:8060']
              labels:
                application: 'Api gateway'
        - job_name: 'restaurant-service-metrics'
          metrics_path: '/actuator/prometheus'
          static_configs:
            - targets: ['restaurant-service:8081']
              labels:
                application: 'Restaurant service'
        - job_name: 'payment-service-metrics'
          metrics_path: '/actuator/prometheus'
          static_configs:
            - targets: ['payment-service:8082']
              labels:
                application: 'Payment service'
        - job_name: 'kitchen-service-metrics'
          metrics_path: '/actuator/prometheus'
          static_configs:
            - targets: ['kitchen-service:8083']
              labels:
                application: 'Kitchen service'
        - job_name: 'delivery-service-metrics'
          metrics_path: '/actuator/prometheus'
          static_configs:
            - targets: ['delivery-service:8084']
              labels:
                application: 'Delivery service'
        - job_name: 'catalog-service-metrics'
          metrics_path: '/actuator/prometheus'
          static_configs:
            - targets: ['catalog-service:8085']
              labels:
                application: 'Catalog service'
