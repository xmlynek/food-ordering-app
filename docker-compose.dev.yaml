version: '3.7'

services:
  catalog-service-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION:-7.17.18}
    restart: on-failure
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ingest.geoip.downloader.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms192m -Xmx192m"
    ports:
      - "9200:9200"
    deploy:
      resources:
        limits:
          memory: 512M

  redis:
    image: redis:${REDIS_VERSION:-latest}
    restart: on-failure
    ports:
      - "6379:6379"

  catalog-service-postgres:
    image: eventuateio/eventuate-vanilla-postgres:${EVENTUATE_COMMON_VERSION:-0.18.0.RELEASE}
    ports:
      - "5435:5432"
    restart: on-failure
    environment:
      POSTGRES_USER: ${DB_USERNAME:-admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: catalog_service
    deploy:
      resources:
        limits:
          memory: 128M
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d catalog_service" ]
      interval: 10s
      timeout: 5s
      retries: 5

  order-service-postgres:
    image: eventuateio/eventuate-vanilla-postgres:${EVENTUATE_COMMON_VERSION:-0.18.0.RELEASE}
    ports:
      - "5432:5432"
    restart: on-failure
    environment:
      POSTGRES_USER: ${DB_USERNAME:-admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: order_service
    deploy:
      resources:
        limits:
          memory: 128M
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d order_service" ]
      interval: 10s
      timeout: 5s
      retries: 5

  payment-service-postgres:
    image: eventuateio/eventuate-vanilla-postgres:${EVENTUATE_COMMON_VERSION:-0.18.0.RELEASE}
    ports:
      - "5433:5432"
    restart: on-failure
    environment:
      POSTGRES_USER: ${DB_USERNAME:-admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: payment_service
    deploy:
      resources:
        limits:
          memory: 128M
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d payment_service" ]
      interval: 10s
      timeout: 5s
      retries: 5

  restaurant-service-postgres:
    image: eventuateio/eventuate-vanilla-postgres:${EVENTUATE_COMMON_VERSION:-0.18.0.RELEASE}
    ports:
      - "5434:5432"
    restart: on-failure
    environment:
      POSTGRES_USER: ${DB_USERNAME:-admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: restaurant_service
    deploy:
      resources:
        limits:
          memory: 128M
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d restaurant_service" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kitchen-service-postgres:
    image: eventuateio/eventuate-vanilla-postgres:${EVENTUATE_COMMON_VERSION:-0.18.0.RELEASE}
    ports:
      - "5436:5432"
    restart: on-failure
    environment:
      POSTGRES_USER: ${DB_USERNAME:-admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: kitchen_service
    deploy:
      resources:
        limits:
          memory: 128M
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d kitchen_service" ]
      interval: 10s
      timeout: 5s
      retries: 5

  delivery-service-postgres:
    image: eventuateio/eventuate-vanilla-postgres:${EVENTUATE_COMMON_VERSION:-0.18.0.RELEASE}
    ports:
      - "5437:5432"
    restart: on-failure
    environment:
      POSTGRES_USER: ${DB_USERNAME:-admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: delivery_service
    deploy:
      resources:
        limits:
          memory: 128M
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d delivery_service" ]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:${KEYCLOAK_VERSION:-20.0.3}
    ports:
      - "8083:8080"
    restart: on-failure
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
    deploy:
      resources:
        limits:
          memory: 512M
    command:
      - start-dev
      - --import-realm
    volumes:
      - ./volumes/keycloak/export:/opt/keycloak/data/import

  zookeeper:
    image: eventuateio/eventuate-zookeeper:${EVENTUATE_COMMON_VERSION:-0.18.0.RELEASE}
    ports:
      - "2181:2181"
    restart: on-failure
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      KAFKA_HEAP_OPTS: -Xmx64m
    deploy:
      resources:
        limits:
          memory: 128M
    healthcheck:
      test: [ "CMD", "echo", "ruok", "|", "nc", "localhost", "2181", "|", "grep", "imok" ]
      interval: 10s
      timeout: 5s
      retries: 10

  kafka:
    image: eventuateio/eventuate-kafka:${EVENTUATE_COMMON_VERSION:-0.18.0.RELEASE}
    ports:
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_healthy
    restart: on-failure
    environment:
      KAFKA_LISTENERS: LC://kafka:29092,LX://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: LC://kafka:29092,LX://${DOCKER_HOST_IP:-localhost}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LC:PLAINTEXT,LX:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LC
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONNECTIONS_MAX_IDLE_MS: -1
      KAFKA_HEAP_OPTS: -Xmx192m
    deploy:
      resources:
        limits:
          memory: 512M

  zipkin:
    image: openzipkin/zipkin:${ZIPKIN_VERSION:-latest}
    ports:
      - '9411:9411'
    restart: on-failure
    environment:
      - STORAGE_TYPE=mem

  prometheus:
    image: prom/prometheus:${PROMETHEUS_VERSION:-latest}
    restart: on-failure
    ports:
      - "9090:9090"
    volumes:
      - ./volumes/prometheus/prometheus-local.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:${GRAFANA_VERSION:-latest}
    container_name: grafana
    ports:
      - "3000:3000"
    restart: on-failure
    volumes:
      - ./volumes/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources

  cdcservice:
    image: eventuateio/eventuate-cdc-service:${EVENTUATE_CDC_VERSION:-0.16.0.RELEASE}
    ports:
      - "8099:8080"
    deploy:
      resources:
        limits:
          memory: 256M
    restart: on-failure
    depends_on:
      order-service-postgres:
        condition: service_healthy
      payment-service-postgres:
        condition: service_healthy
      restaurant-service-postgres:
        condition: service_healthy
      kitchen-service-postgres:
        condition: service_healthy
      kafka:
        condition: service_started
    environment:
      CDC_OPTS: "--debug"

      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181

      EVENTUATE_CDC_READER_READER1_TYPE: postgres-wal
      EVENTUATE_CDC_READER_READER1_DATASOURCEURL: jdbc:postgresql://order-service-postgres:5432/order_service
      EVENTUATE_CDC_READER_READER1_MONITORINGSCHEMA: public
      EVENTUATE_CDC_READER_READER1_DATASOURCEUSERNAME: admin
      EVENTUATE_CDC_READER_READER1_DATASOURCEPASSWORD: password
      EVENTUATE_CDC_READER_READER1_DATASOURCEDRIVERCLASSNAME: org.postgresql.Driver
      EVENTUATE_CDC_READER_READER1_LEADERSHIPLOCKPATH: /eventuate/cdc/leader/order_service
      EVENTUATE_CDC_READER_READER1_OFFSETSTORAGETOPICNAME: db.history.common
      EVENTUATE_CDC_READER_READER1_OUTBOXID: 1

      EVENTUATE_CDC_READER_READER2_TYPE: postgres-wal
      EVENTUATE_CDC_READER_READER2_DATASOURCEURL: jdbc:postgresql://payment-service-postgres:5432/payment_service
      EVENTUATE_CDC_READER_READER2_MONITORINGSCHEMA: public
      EVENTUATE_CDC_READER_READER2_DATASOURCEUSERNAME: admin
      EVENTUATE_CDC_READER_READER2_DATASOURCEPASSWORD: password
      EVENTUATE_CDC_READER_READER2_DATASOURCEDRIVERCLASSNAME: org.postgresql.Driver
      EVENTUATE_CDC_READER_READER2_LEADERSHIPLOCKPATH: /eventuate/cdc/leader/payment_service
      EVENTUATE_CDC_READER_READER2_OFFSETSTORAGETOPICNAME: db.history.common
      EVENTUATE_CDC_READER_READER2_OUTBOXID: 2

      EVENTUATE_CDC_READER_READER3_TYPE: postgres-wal
      EVENTUATE_CDC_READER_READER3_DATASOURCEURL: jdbc:postgresql://restaurant-service-postgres:5432/restaurant_service
      EVENTUATE_CDC_READER_READER3_MONITORINGSCHEMA: public
      EVENTUATE_CDC_READER_READER3_DATASOURCEUSERNAME: admin
      EVENTUATE_CDC_READER_READER3_DATASOURCEPASSWORD: password
      EVENTUATE_CDC_READER_READER3_DATASOURCEDRIVERCLASSNAME: org.postgresql.Driver
      EVENTUATE_CDC_READER_READER3_LEADERSHIPLOCKPATH: /eventuate/cdc/leader/restaurant_service
      EVENTUATE_CDC_READER_READER3_OFFSETSTORAGETOPICNAME: db.history.common
      EVENTUATE_CDC_READER_READER3_OUTBOXID: 3

      EVENTUATE_CDC_READER_READER4_TYPE: postgres-wal
      EVENTUATE_CDC_READER_READER4_DATASOURCEURL: jdbc:postgresql://kitchen-service-postgres:5432/kitchen_service
      EVENTUATE_CDC_READER_READER4_MONITORINGSCHEMA: public
      EVENTUATE_CDC_READER_READER4_DATASOURCEUSERNAME: admin
      EVENTUATE_CDC_READER_READER4_DATASOURCEPASSWORD: password
      EVENTUATE_CDC_READER_READER4_DATASOURCEDRIVERCLASSNAME: org.postgresql.Driver
      EVENTUATE_CDC_READER_READER4_LEADERSHIPLOCKPATH: /eventuate/cdc/leader/kitchen_service
      EVENTUATE_CDC_READER_READER4_OFFSETSTORAGETOPICNAME: db.history.common
      EVENTUATE_CDC_READER_READER4_OUTBOXID: 4

      EVENTUATE_CDC_READER_READER5_TYPE: postgres-wal
      EVENTUATE_CDC_READER_READER5_DATASOURCEURL: jdbc:postgresql://delivery-service-postgres:5432/delivery_service
      EVENTUATE_CDC_READER_READER5_MONITORINGSCHEMA: public
      EVENTUATE_CDC_READER_READER5_DATASOURCEUSERNAME: admin
      EVENTUATE_CDC_READER_READER5_DATASOURCEPASSWORD: password
      EVENTUATE_CDC_READER_READER5_DATASOURCEDRIVERCLASSNAME: org.postgresql.Driver
      EVENTUATE_CDC_READER_READER5_LEADERSHIPLOCKPATH: /eventuate/cdc/leader/delivery_service
      EVENTUATE_CDC_READER_READER5_OFFSETSTORAGETOPICNAME: db.history.common
      EVENTUATE_CDC_READER_READER5_OUTBOXID: 5

      EVENTUATE_CDC_PIPELINE_PIPELINE1_TYPE: eventuate-tram
      EVENTUATE_CDC_PIPELINE_PIPELINE1_READER: reader1
      EVENTUATE_CDC_PIPELINE_PIPELINE1_EVENTUATEDATABASESCHEMA: public

      EVENTUATE_CDC_PIPELINE_PIPELINE2_TYPE: eventuate-tram
      EVENTUATE_CDC_PIPELINE_PIPELINE2_READER: reader2
      EVENTUATE_CDC_PIPELINE_PIPELINE2_EVENTUATEDATABASESCHEMA: public

      EVENTUATE_CDC_PIPELINE_PIPELINE3_TYPE: eventuate-tram
      EVENTUATE_CDC_PIPELINE_PIPELINE3_READER: reader3
      EVENTUATE_CDC_PIPELINE_PIPELINE3_EVENTUATEDATABASESCHEMA: public

      EVENTUATE_CDC_PIPELINE_PIPELINE4_TYPE: eventuate-tram
      EVENTUATE_CDC_PIPELINE_PIPELINE4_READER: reader4
      EVENTUATE_CDC_PIPELINE_PIPELINE4_EVENTUATEDATABASESCHEMA: public

      EVENTUATE_CDC_PIPELINE_PIPELINE5_TYPE: eventuate-tram
      EVENTUATE_CDC_PIPELINE_PIPELINE5_READER: reader5
      EVENTUATE_CDC_PIPELINE_PIPELINE5_EVENTUATEDATABASESCHEMA: public
